# Generated by Django 5.2.1 on 2025-05-22 03:07

import django.contrib.postgres.indexes
import django.core.validators
import django.db.models.deletion
import stationery.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('label', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MovementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('label', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScopeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('label', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('label', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='brands/')),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('product_schema', models.JSONField(blank=True, default=stationery.models.default_product_schema)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('minimum_stock', models.IntegerField()),
                ('stock', models.IntegerField()),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('active', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Atributos específicos según el tipo de producto')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='stationery.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('invoice_image', models.ImageField(blank=True, null=True, upload_to='purchases/invoices/')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Número de Factura')),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, db_column='payment_method', default='CA', help_text='Método de pago usado para la compra', null=True, on_delete=django.db.models.deletion.PROTECT, to='stationery.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_attributes', models.JSONField(default=dict, help_text='Atributos del producto al momento de la compra')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.product')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.purchase')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='stationery.purchase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('reason', models.TextField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.product')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.purchase')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stationery.transactionstatus')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.customer')),
                ('payment_method', models.ForeignKey(db_column='payment_method', on_delete=django.db.models.deletion.PROTECT, to='stationery.paymentmethod')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Percentage'), (2, 'Fixed Amount')], null=True)),
                ('discount_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_attributes', models.JSONField(default=dict, help_text='Atributos del producto al momento de la venta')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.sale')),
            ],
        ),
        migrations.AddField(
            model_name='sale',
            name='products',
            field=models.ManyToManyField(through='stationery.SaleDetail', to='stationery.product'),
        ),
        migrations.CreateModel(
            name='SaleInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='stationery.sale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('reason', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.sale')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('active', models.BooleanField(default=True, help_text='Discount available to apply')),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, to='stationery.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stationery.discounttype')),
                ('products', models.ManyToManyField(blank=True, to='stationery.product')),
                ('scope', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stationery.scopetype')),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Número de unidades movidas (debe ser ≥ 1)', validators=[django.core.validators.MinValueValidator(1)])),
                ('reason', models.CharField(blank=True, choices=[('COMPRA', 'Compra a proveedor'), ('VENTA', 'Venta a cliente'), ('DEVOLUCION', 'Devolución'), ('AJUSTE', 'Ajuste de inventario'), ('DANADO', 'Mercancía dañada'), ('VENCIDO', 'Producto vencido')], max_length=15, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements_created', to=settings.AUTH_USER_MODEL)),
                ('movement_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to='stationery.movementtype')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='stationery.product')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='stationery.purchase')),
                ('purchase_return', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='stationery.purchasereturn')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='stationery.sale')),
                ('sale_return', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='stationery.salereturn')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('brands', models.ManyToManyField(to='stationery.brand')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stationery.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='suppliers',
            field=models.ManyToManyField(blank=True, to='stationery.supplier'),
        ),
        migrations.AddField(
            model_name='sale',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stationery.transactionstatus'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stationery.transactionstatus'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['name'], name='idx_brand_name'),
        ),
        migrations.AddConstraint(
            model_name='purchaseinvoice',
            constraint=models.CheckConstraint(condition=models.Q(('due_date__gte', models.F('issue_date'))), name='stationery_purchaseinvoice_due_after_issue'),
        ),
        migrations.AddConstraint(
            model_name='saleinvoice',
            constraint=models.CheckConstraint(condition=models.Q(('due_date__gte', models.F('issue_date'))), name='stationery_saleinvoice_due_after_issue'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['date'], name='stationery__date_79f3dd_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['movement_type'], name='stationery__movemen_739386_idx'),
        ),
        migrations.AddConstraint(
            model_name='stockmovement',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(models.Q(('purchase__isnull', True), ('sale__isnull', True), ('purchase_return__isnull', True), ('sale_return__isnull', True)), models.Q(('purchase__isnull', False), ('sale__isnull', True), ('purchase_return__isnull', True), ('sale_return__isnull', True)), models.Q(('purchase__isnull', True), ('sale__isnull', False), ('purchase_return__isnull', True), ('sale_return__isnull', True)), models.Q(('purchase__isnull', True), ('sale__isnull', True), ('purchase_return__isnull', False), ('sale_return__isnull', True)), models.Q(('purchase__isnull', True), ('sale__isnull', True), ('purchase_return__isnull', True), ('sale_return__isnull', False)), _connector='OR')), name='single_transaction_per_movement'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='stationery__name_c9d0c5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock'], name='stationery__stock_3230a7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=django.contrib.postgres.indexes.GinIndex(fields=['attributes'], name='gin_attributes'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(condition=models.Q(('stock__gte', 0)), name='non_negative_stock'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['-date', 'customer'], name='stationery__date_db54b7_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status'], name='stationery__status__b04d97_idx'),
        ),
    ]
